:mod:`quartic_sdk.graphql_client`
=================================

.. py:module:: quartic_sdk.graphql_client


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   quartic_sdk.graphql_client.GraphqlClient



.. data:: SCHEMA_REGEX
   

   

.. class:: GraphqlClient(url: str, username: str = None, password: str = None, token: str = None, timeout: Optional[Union[(aiohttp.ClientTimeout, float)]] = None, verify_ssl: bool = True)


   Execute Query.

   .. method:: version()
      :staticmethod:

      Return the SDK version


   .. method:: _get_client(self) -> aiohttp.ClientSession
      :async:

      Get aiohttp client session object.


   .. method:: _get_graphql_url(self) -> str

      Generates the graphql endpoint.


   .. method:: __execute__query(self, query: str, variables: dict = None)
      :async:

      Execute query


   .. method:: execute_query(self, query: str, variables: dict = None)

      Execute query with query param.
      :param query: Query that needs to be executed
      :param variables: Dictionary of variables that are used inside the query.


   .. method:: execute_async_query(self, query: str, variables: dict = None)
      :async:

      Execute query asynchronously.
      :param query: Query that needs to be executed
      :param variables: Dictionary of variables that are used inside the query.
      :return:


   .. method:: get_graphql_client_from_apihelper(api_helper: quartic_sdk.api.api_helper.APIHelper)
      :staticmethod:

      Returns an instance of GraphqlClient from provided
      api_helper instance.
      :param api_helper: APIHelper instace whose configurations will be used to initialte GraphqlClient
      :return: new GraphqlCleint instance initiated with existing APIHelper configuration. 



